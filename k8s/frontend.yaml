apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: ecommerce-microservices
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: frontend
        imagePullPolicy: Always
        image: leofranzen/ecommerce-microservices-frontend:1.0.0
        resources:
          requests:
            cpu: 50m
            memory: 32Mi
          limits:
            cpu: 90m
            memory: 64Mi
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalog:3550"
        - name: CURRENCY_SERVICE_ADDR
          value: "currency:7000"
        - name: CART_SERVICE_ADDR
          value: "cart:7070"
        - name: RECOMMENDATION_SERVICE_ADDR
          value: "recommendation:8080"
        - name: SHIPPING_SERVICE_ADDR
          value: "shipping:50051"
        - name: CHECKOUT_SERVICE_ADDR
          value: "checkout:5050"
        - name: AD_SERVICE_ADDR
          value: "ad:9555"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/_healthz"
            port: 8080
            httpHeaders:
            - name: "Cookie"
              value: "shop_session-id=x-readiness-probe"
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/_healthz"
            port: 8080
            httpHeaders:
            - name: "Cookie"
              value: "shop_session-id=x-liveness-probe"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
  namespace: ecommerce-microservices
spec:
  selector:
    app: frontend
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: ecommerce-microservices
spec:
  selector:
    app: frontend
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
